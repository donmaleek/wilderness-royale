events {
    worker_connections 1024;
}

http {
    # Define backend variable from environment (defaults to empty string)
    map "" $backend_service {
        default "${BACKEND_SERVICE}";
    }

    server {
        listen 3000;
        server_name localhost;
        root /usr/share/nginx/html;
        
        # Gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Next.js routing
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header X-Frame-Options "SAMEORIGIN";
        }

        # Static assets caching
        location /_next/static {
            alias /usr/share/nginx/html/_next/static;
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        # Public folder assets
        location /static {
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        # Conditional API proxy
        location /api/ {
            # Return 501 if no backend configured
            if ($backend_service = "") {
                return 501 '{"status": 501, "message": "Backend service not configured"}';
            }

            # Proxy to backend if configured
            proxy_pass http://$backend_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Error handling
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        error_page 501 = @no_backend;
        
        location @no_backend {
            add_header Content-Type application/json;
            return 501 '{"status": 501, "message": "Backend service not configured"}';
        }
        
        location = /50x.html {
            internal;
            root /usr/share/nginx/html;
        }

        # Security headers
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
    }
}